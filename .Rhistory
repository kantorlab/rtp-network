df_race_long$Category <- factor(df_race_long$Category,
levels = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"))
# Ethnicity
df_ethnicity <- data.frame(
Grouping = c("Hispanic", "Not Hispanic"),
Named_Mean = c(322/140, 928/357),
Tested_Mean = c(99/140, 338/357),
Diagnosed_Mean = c(40/140, 91/357),
Sequenced_Mean = c(40/140, 89/357)
)
df_ethnicity_long <- df_ethnicity %>%
gather(Category, Value, -Grouping)
df_ethnicity_long$Category <- factor(df_ethnicity_long$Category,
levels = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"))
# Combine all datasets into one
df_long$Type <- "Behavior"
df_race_long$Type <- "Race"
df_ethnicity_long$Type <- "Ethnicity"
combined_df <- rbind(df_long, df_race_long, df_ethnicity_long)
# Calculate maximum number of categories
max_groups <- max(table(combined_df$Type, combined_df$Grouping))
# Adjust bar width based on the number of categories
combined_df$bar_width <- 0.9 / max_groups
# Plot
p <- ggplot(combined_df, aes(x = Grouping, y = Value, fill = Category)) +
geom_bar(stat = "identity", aes(width = bar_width), position = position_dodge(width = 0.9)) +
labs(y = "Mean Number of Partners") +
scale_fill_brewer(palette="Set1",
breaks=c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"),
labels=c("Named", "Tested", "Diagnosed", "Sequenced"),
name="Category") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 16, vjust=-0.5),
axis.title.y = element_text(size = 16, vjust=0.5),
axis.text.x = element_text(size = 14, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
) +
facet_wrap(~Type, scales = "free_x", ncol = 3) +
ylim(0, max(combined_df$Value) + 0.1*max(combined_df$Value))
print(p)
p <-
p + theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 16, vjust=-0.5),
axis.title.y = element_text(size = 16, vjust=0.5),
axis.text.x = element_text(size = 14, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
strip.text = element_text(size = 20, face = "bold", color = "black"),
strip.background = element_rect(fill = "lightgray", color = "black", size = 1)
)
print(p)
library(tidyr)
library(ggplot2)
# Behavior
df <- data.frame(
Grouping = c("MSM", "PWID", "HRH"),
Named_Mean = c(794/275, 70/26, 318/160),
Tested_Mean = c(262/275, 16/26, 134/160),
Diagnosed_Mean = c(81/275, 12/26, 31/160),
Sequenced_Mean = c(79/275, 12/26, 31/160)
)
df_long <- df %>%
gather(Category, Value, -Grouping)
df_long$Category <- factor(df_long$Category,
levels = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"))
# Race
df_race <- data.frame(
Grouping = c("White", "Black", "Asian", "Other"),
Named_Mean = c(861/313, 273/133, 23/16, 72/28),
Tested_Mean = c(311/313, 93/133, 8/16, 23/28),
Diagnosed_Mean = c(88/313, 34/133, 3/16, 7/28),
Sequenced_Mean = c(86/313, 34/133, 3/16, 7/28)
)
df_race_long <- df_race %>%
gather(Category, Value, -Grouping)
df_race_long$Category <- factor(df_race_long$Category,
levels = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"))
# Ethnicity
df_ethnicity <- data.frame(
Grouping = c("Hispanic", "Not Hispanic"),
Named_Mean = c(322/140, 928/357),
Tested_Mean = c(99/140, 338/357),
Diagnosed_Mean = c(40/140, 91/357),
Sequenced_Mean = c(40/140, 89/357)
)
df_ethnicity_long <- df_ethnicity %>%
gather(Category, Value, -Grouping)
df_ethnicity_long$Category <- factor(df_ethnicity_long$Category,
levels = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"))
# Combine all datasets into one
df_long$Type <- "Behavior"
df_race_long$Type <- "Race"
df_ethnicity_long$Type <- "Ethnicity"
combined_df <- rbind(df_long, df_race_long, df_ethnicity_long)
# Calculate maximum number of categories
max_groups <- max(table(combined_df$Type, combined_df$Grouping))
# Set the bar widths based on type
combined_df$bar_width[combined_df$Type == "Behavior"] <- 0.7/max_groups
combined_df$bar_width[combined_df$Type == "Race"] <- 0.9/max_groups
combined_df$bar_width[combined_df$Type == "Ethnicity"] <- 0.5/max_groups
# Plot
p <- ggplot(combined_df, aes(x = Grouping, y = Value, fill = Category)) +
geom_bar(stat = "identity", aes(width = bar_width), position = position_dodge(width = 0.9)) +
labs(y = "Mean Number of Partners") +
scale_fill_brewer(palette="Set1",
breaks=c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"),
labels=c("Named", "Tested", "Diagnosed", "Sequenced"),
name="Category") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 16, vjust=-0.5),
axis.title.y = element_text(size = 16, vjust=0.5),
axis.text.x = element_text(size = 14, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
) +
facet_wrap(~Type, scales = "free_x", ncol = 3) +
ylim(0, max(combined_df$Value) + 0.1*max(combined_df$Value))
print(p)
p <-
p + theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_text(size = 16, vjust=-0.5),
axis.title.y = element_text(size = 16, vjust=0.5),
axis.text.x = element_text(size = 14, angle = 45, hjust = 1),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16),
strip.text = element_text(size = 20, face = "bold", color = "black"),
strip.background = element_rect(fill = "lightgray", color = "black", size = 1)
)
print(p)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
# Structuring the data with the average values
overall_data <- data.frame(
Category = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"),
Value = c(2.7, 338/497, 154/497, 152/497)
)
overall_data$Category <- factor(overall_data$Category,
levels = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"))
# Loading necessary libraries
library(tidyr)
library(ggplot2)
# Plot for overall data
p_overall <- ggplot(overall_data, aes(x = Category, y = Value, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Mean Number of Partners Overall",
y = "Mean Number of Partners",
x = "") +
scale_fill_brewer(palette="Set1",
breaks=c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"),
labels=c("Named", "Tested", "Diagnosed", "Sequenced"),
name="Category") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 16),
axis.text.x = element_text(size = 14, face = "bold", color = "blue"),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
print(p_overall)
source("~/code/rtp-network/idweek-viz/partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
# Loading necessary library
library(ggplot2)
# Structuring the data with the average values
data_avg <- data.frame(
Category = c("Named", "Tested", "Diagnosed", "Sequenced"),
Value = c(2.7, 338/497, 154/497, 152/497)
)
# Plotting the average data
ggplot(data_avg, aes(x=Category, y=Value)) +
geom_bar(stat="identity", fill="blue") +
labs(title="Average Number of Partners per Index Person (n=497)",
x="", y="Average Count") +
theme_minimal() +
theme(axis.text.x = element_blank(),   # Hide x-axis labels
axis.title.x = element_text(size=16, face="bold", color="black"),
axis.text.y = element_text(size=16, color="blue"),    # Keep y-axis color scheme
axis.title.y = element_text(size=16, face="bold", color="blue"))   # Keep y-axis title color scheme
# Loading necessary library
library(ggplot2)
# Structuring the data with the average values
data_avg <- data.frame(
Category = c("Named", "Tested", "Diagnosed", "Sequenced"),
Value = c(2.7, 338/497, 154/497, 152/497)
)
# Define the color scheme
color_scheme <- c(Named="red", Tested="blue", Diagnosed="green", Sequenced="purple")
# Plotting the average data
ggplot(data_avg, aes(x=Category, y=Value, fill=Category)) +
geom_bar(stat="identity", position="dodge") +
labs(title="Average Number of Partners per Index Person (n=497)",
x="", y="Average Count") +
scale_fill_manual(values=color_scheme) +
theme_minimal() +
theme(axis.text.x = element_blank(),   # Hide x-axis labels
axis.title.x = element_text(size=16, face="bold"),
axis.text.y = element_text(size=16),
axis.title.y = element_text(size=16, face="bold"),
legend.position="none")   # Remove legend as category is evident from x-axis
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
# Plotting the average data
ggplot(data_avg, aes(x=Category, y=Value)) +
geom_bar(stat="identity", fill=Category) +
labs(title="Average Number of Partners per Index Person (n=497)",
x="", y="Average Count") +
theme_minimal() +
theme(axis.text.x = element_text(size=16, face="bold", color="blue"),
axis.title.x = element_text(size=16, face="bold", color="black"))
# Plotting the average data
ggplot(data_avg, aes(x=Category, y=Value)) +
geom_bar(stat="identity") +
labs(title="Average Number of Partners per Index Person (n=497)",
x="", y="Average Count") +
theme_minimal() +
theme(axis.text.x = element_text(size=16, face="bold", color="blue"),
axis.title.x = element_text(size=16, face="bold", color="black"))
# Loading necessary libraries
library(tidyr)
library(ggplot2)
library(RColorBrewer)
# Structuring the data with the average values
overall_data <- data.frame(
Category = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"),
Value = c(2.7, 338/497, 154/497, 152/497)
)
# Setting the order of the factor levels for Category
overall_data$Category <- factor(overall_data$Category,
levels = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"))
# Plot for overall data
p_overall <- ggplot(overall_data, aes(x = Category, y = Value, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Mean Number of Partners Overall",
y = "Mean Number of Partners",
x = "") +
scale_fill_brewer(palette="Set1",
breaks=c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"),
labels=c("Named", "Tested", "Diagnosed", "Sequenced"),
name="Category") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 16),
axis.text.x = element_text(size = 14, face = "bold", color = "blue"),
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
print(p_overall)
# Loading necessary libraries
library(tidyr)
library(ggplot2)
library(RColorBrewer)
# Structuring the data with the average values
overall_data <- data.frame(
Category = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"),
Value = c(2.7, 338/497, 154/497, 152/497)
)
# Setting the order of the factor levels for Category
overall_data$Category <- factor(overall_data$Category,
levels = c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"))
# Plot for overall data
p_overall <- ggplot(overall_data, aes(x = Category, y = Value, fill = Category)) +
geom_bar(stat = "identity", position = "dodge") +
labs(title = "Mean Number of Partners Overall",
y = "Mean Number of Partners",
x = "") +
scale_fill_brewer(palette="Set1",
breaks=c("Named_Mean", "Tested_Mean", "Diagnosed_Mean", "Sequenced_Mean"),
labels=c("Named", "Tested", "Diagnosed", "Sequenced"),
name="Category") +
theme_minimal() +
theme(
plot.title = element_text(size = 18, face = "bold"),
axis.title.x = element_blank(),
axis.title.y = element_text(size = 16),
axis.text.x = element_text(size = 14, face = "bold"),  # Removed the blue color
axis.text.y = element_text(size = 14),
legend.text = element_text(size = 14),
legend.title = element_text(size = 16)
)
print(p_overall)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/partner-naming-testing-diagnosis-sequencing.R")
.libPaths()
getwd()
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
plot.new()
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
plot.new()
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
# ... [rest of your code remains unchanged]
# Draw the Venn diagram without the default intersection label
venn.plot <- draw.pairwise.venn(
area1 = total_in_both + only_in_SGDB,
area2 = total_in_both + only_in_CTDB,
cross.area = total_in_both,
category = c("Genomic DB", "Partner DB"),
lty = "blank",
fill = c("red", "blue"),
alpha = 0.50,
label.col = c("black", "black", "white"), # Set intersection label color to white to "hide" it
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
cat.default.pos = "text",
cat.pos = c(2.5, 4.5),
cat.dist = c(0.05, 0.05),
cat.fontfamily = "sans",
cat.cex = 1.5,
cat.fontface = "bold",
rotation.degree = 180,
rotation.centre = c(1.2, 1.2)
)
# Show the plot
grid.draw(venn.plot)
# Manually add custom intersection labels using grid.text()
library(grid)
grid.text("A=904", x = 0.5, y = 0.5, gp = gpar(fontsize = 12, fontface = "bold"))
grid.text("B=497", x = 0.5, y = 0.47, gp = gpar(fontsize = 12, fontface = "bold"))
grid.text("C=154", x = 0.5, y = 0.44, gp = gpar(fontsize = 12, fontface = "bold"))
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R", echo=TRUE)
debugSource("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
rm(list=ls())
library(VennDiagram)
library(grid)
# Define the set counts
total_in_both <- 904
only_in_SGDB <- 1649
only_in_CTDB <- 1514
# Draw the Venn diagram with default intersection label
venn.plot <- draw.pairwise.venn(
area1 = total_in_both + only_in_SGDB,
area2 = total_in_both + only_in_CTDB,
cross.area = total_in_both,
category = c("Genomic DB", "Partner DB"),
lty = "blank",
fill = c("red", "blue"),
alpha = 0.50,
label.col = c("white", "white", "white"),
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
cat.default.pos = "text",
cat.pos = c(2.5, 4.5),
cat.dist = c(0.05, 0.05),
cat.fontfamily = "sans",
cat.cex = 2,
cat.fontface = "bold",
cat.col = "white",
rotation.degree = 180,
rotation.centre = c(1.2, 1.2)
)
# Overlay a solid circle to hide the intersection number
grid.circle(x = 0.49, y = 0.5, r = 0.03, gp = gpar(fill = "black", col = NA))
# Manually add custom intersection labels with increased font size
grid.text("904", x = 0.49, y = 0.50, gp = gpar(fontsize = 24, fontface = "bold", col = "white"))
grid.text("497", x = 0.49, y = 0.44, gp = gpar(fontsize = 24, fontface = "bold", col = "white"))
grid.text("154", x = 0.49, y = 0.38, gp = gpar(fontsize = 24, fontface = "bold", col = "white"))
# Draw downward arrows
arrow_spec <- arrow(type="closed", length = unit(0.15, "inches"))
grid.lines(x = c(0.49, 0.49), y = c(0.48, 0.45), arrow = arrow_spec, gp = gpar(lwd = 2))
grid.lines(x = c(0.49, 0.49), y = c(0.42, 0.39), arrow = arrow_spec, gp = gpar(lwd = 2))
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R", echo=TRUE)
# Clear the environment
rm(list=ls())
# Load required libraries
library(VennDiagram)
library(grid)
# Define the set counts
total_in_both <- 904
only_in_SGDB <- 1649
only_in_CTDB <- 1514
# Draw the Venn diagram suppressing labels for "1514", "1649", and the intersection
venn.plot <- draw.pairwise.venn(
area1 = total_in_both + only_in_SGDB,
area2 = total_in_both + only_in_CTDB,
cross.area = total_in_both,
category = c("Genomic DB", "Partner DB"),
lty = "blank",
fill = c("red", "blue"),
alpha = 0.50,
label.col = c("white", "white", "white"),
label = c(" ", " ", " "),  # Use spaces to suppress all default labels
cex = 1.5,
fontface = "bold",
fontfamily = "sans",
cat.default.pos = "text",
cat.pos = c(2.5, 4.5),
cat.dist = c(0.05, 0.05),
cat.fontfamily = "sans",
cat.cex = 2,
cat.fontface = "bold",
cat.col = "white",
rotation.degree = 180,
rotation.centre = c(1.2, 1.2)
)
# Show the plot
grid.draw(venn.plot)
# Overlay black rectangles behind all numbers
grid.rect(x = 0.49, y = 0.50, width=0.08, height=0.05, gp = gpar(fill = "black", col = NA))
grid.rect(x = 0.49, y = 0.44, width=0.08, height=0.05, gp = gpar(fill = "black", col = NA))
grid.rect(x = 0.49, y = 0.38, width=0.08, height=0.05, gp = gpar(fill = "black", col = NA))
# Manually add custom labels with the desired font size
grid.text("904", x = 0.49, y = 0.50, gp = gpar(fontsize = 24, fontface = "bold", col = "white"))
grid.text("497", x = 0.49, y = 0.44, gp = gpar(fontsize = 24, fontface = "bold", col = "white"))
grid.text("154", x = 0.49, y = 0.38, gp = gpar(fontsize = 24, fontface = "bold", col = "white"))
grid.text("1649", x = 0.3, y = 0.75, gp = gpar(fontsize = 24, fontface = "bold", col = "white"))
grid.text("1514", x = 0.7, y = 0.75, gp = gpar(fontsize = 24, fontface = "bold", col = "white"))
# Draw downward arrows with increased length
arrow_spec <- arrow(type="closed", length = unit(0.15, "inches"))
grid.lines(x = c(0.49, 0.49), y = c(0.48, 0.44), arrow = arrow_spec, gp = gpar(lwd = 2))
grid.lines(x = c(0.49, 0.49), y = c(0.41, 0.38), arrow = arrow_spec, gp = gpar(lwd = 2))
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/venn-diagram-db.R")
source("~/code/rtp-network/idweek-viz/overall-partner-naming-testing-diagnosis-sequencing.R")
